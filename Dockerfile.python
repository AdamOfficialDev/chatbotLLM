# Alternative: Use Python base image to avoid venv issues
FROM python:3.11-slim

# Install Node.js 18
RUN apt-get update && apt-get install -y \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install Python dependencies first (better caching)
COPY backend/requirements.txt ./backend/
RUN pip install --no-cache-dir --extra-index-url https://d33sy5i8bnduwe.cloudfront.net/simple/ -r backend/requirements.txt

# Copy and install Node.js dependencies
COPY package.json ./
RUN npm install

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Create startup script
RUN echo '#!/bin/bash\n\
export PORT=${PORT:-3000}\n\
echo "=== Railway Python-Node Deployment ==="\n\
echo "PORT: $PORT"\n\
echo "Node version: $(node --version)"\n\
echo "Python version: $(python --version)"\n\
echo "Starting backend..."\n\
python backend/server.py &\n\
BACKEND_PID=$!\n\
echo "Backend PID: $BACKEND_PID"\n\
sleep 10\n\
echo "Starting frontend on port $PORT..."\n\
npm start -- --port $PORT --hostname 0.0.0.0\n\
' > start.sh && chmod +x start.sh

EXPOSE $PORT

# Health check (check backend health endpoint)
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8001/api/health || exit 1

CMD ["./start.sh"]